関数 左からの畳み込み（リスト１）は (累積値) => (関数F) => {
  もし (空である(リスト１)) 累積値 でなければ 左からの畳み込み(末尾(リスト１))(関数F(累積値, 先頭(リスト１)))(関数F)
}
一致を確認(10)(左からの畳み込み(リスト(1 2 3 4))(0)((x, y) => x + y))
一致を確認("ABC")(左からの畳み込み(リスト("A" "B" "C"))("")((x, y) => x + y))
一致を確認(リスト(4 3 2 1))(左からの畳み込み(リスト(1 2 3 4))(リスト())((x, y) => 構築(y)(x)))
一致を確認(リスト(4 3 2 1))(左からの畳み込み(リスト(1 2 3 4))(リスト()){x, y => 構築(y)(x)})

変数 合計　は 左からの畳み込み(リスト(1 2 3 4 5))(0){x, y => x + y}
一致を確認(15)(合計)
一致を確認(10.0)(左からの畳み込み(リスト(1.0 2.0 3.0 4.0))(0.0){x, y => x + y})
